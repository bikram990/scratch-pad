[{"content":"Cloning and getting remote changes Clone a repository git clone \u003cgitRepositoryURL\u003e Clone a repository with limited history git clone --depth n \u003cgitRepositoryURL\u003e  Infowhere n is the number of revisions you want in the history\n Clone specific branch git clone -b \u003cbranchName\u003e --single-branch \u003cgitRepositoryURL\u003e Clone with all submodules git clone \u003cgitRepositoryURL\u003e --recursive Pull remote changes git pull Pull remote changes without generating a merge commit git pull --rebase Discarding changes Discard changes to a file git checkout \u003cfilePath\u003e  WarningYou will loose all the changes to that file\n Discard some commit git reset --hard HEAD~n  Notewhere n is number of last commits which you want to discard\n WarningYou will loose all the changes\n\nTags List all tags git tag -l Create a local tag git tag \u003ctagName\u003e Create a remote tag git tag \u003ctagName\u003e git push origin \u003ctagName\u003e Push all local tags to remote git push origin --tags Delete a tag git tag --delete \u003ctagName\u003e Branches List all branches git branch -a List all remote branches git branch -r List all local branches git branch -l Switch to a branch git checkout \u003cbranchName\u003e  NoteIf there is a tag with same name as the branch then this command will checkout the tag and will not track it\n Checkout remote branch with a different local name git branch -f --track \u003clocalBranchName\u003e origin/\u003cremoteBranchName\u003e Create a local branch git checkout -b \u003cnewBranchName\u003e Create a local branch and push it to remote git checkout -b \u003cnewBranchName\u003e git branch --edit-description git push origin \u003cnewBranchName\u003e  Info–edit-description is for editing the commit message for the branch creation\n Create a local branch from a specific commit git checkout \u003ccommitHash\u003e git branch -b \u003cnewBranchName\u003e git push origin \u003cnewBranchName\u003e Rename a local branch git branch -m \u003coldName\u003e \u003cnewName\u003e git branch -m \u003cnewName\u003e #rename current local branch Rename remote branch git branch -m \u003coldName\u003e \u003cnewName\u003e #rename locally git push remote :\u003cremoteBranchName\u003e #delete the branch from remote git push remote \u003cnewLocalName\u003e #push the local branch to remote Delete a local branch git branch -d \u003cbranchName\u003e # or git branch -D \u003cbranchName\u003e  Note-D is forceful deletion of branch\n Delete a remote branch git push origin --delete \u003cbranchName\u003e # or git push origin :\u003cbranchName\u003e Commit and Push Commit changes git add \u003cchangedFiles\u003e git commit -m \u003ccommitMessage\u003e Push local commits to remote git push Change commit message git rebase -i HEAD~n  Infowhere n is number of last commits which you want to rebase\n The above command will open a editor and will give various rebase options use reword option to select the commits whose commit message you want to change. After selecting the commits close the file. git will open all the commits one by one to allow rewording the commit message.   View changes in commit git show \u003ccommit hash\u003e  InfoYou can get the commit hash from git log command\n Undo last commit git reset --soft HEAD~n  Infowhere n is number of last commits which you want to undo\n Cherry Pick a commit from other branch git checkout \u003cbranch to apply the commit\u003e git cherry-pick \u003ccommit hash\u003e  InfoYou can get the commit hash from git log command\n Merge Merge without committing git merge --no-commit --no-ff \u003cbranchNameFromWhereYouWantToTakeChanges\u003e Handling merge conflicts git checkout --ours \u003cfilePath\u003e git checkout --theirs \u003cfilePath\u003e  TipIf you want to merge both the changes then change the file and add the file to the commit using git add\n Abort a merge git merge --abort List all the commits in a merge git log \u003cMergeCommitHash\u003e^..\u003cMergeCommitHash\u003e --pretty=format:\"%aD %H %ae %s\" Revert Revert a specific commit git revert -m 1 \u003ccommitHash\u003e  Info1 indicates that you want to go to first ancestor of this commit\n Remove a big file from a specific commit pushed to remote git rebase -i \u003ccommitHash - 1\u003e git rm --cached \u003cPath to bigFile\u003e git commit --amend -C HEAD git rebase --continue git push --force  Note Provide the commit hash of one commit before the commit which has the big file git will open editor, change pick to edit for the wrong commit which has the big file Close the editor   Stash Stash local uncommitted changes git stash  InfoAll the files added to a commit will be un-staged and put in stash\n List all stashes git stash list Apply stashed changes git stash pop  InfoThis will apply the stash and delete the stash changes\n Apply stashed changes to multiple branches git stash apply git checkout \u003cbranchName\u003e git stash apply git stash drop  NoteLast step will delete the stash\n View diff from stash without applying git stash show -p stash@{n}  Infowhere n is the stash number you want to view, to get the stash number use git stash list command\n Commit Logs Show all commit logs git log Show all of your commits git log --author='Your Name' # or git log --author='you@somedomain.com' Show all unpushed commits git log --branches --not --remotes  NoteThe above command will list all the unpushed commits in all branches\n Show all commits which are present in one branch and not in other git log \u003cbranch\u003e --not \u003cbranchToCheckAgainst\u003e --reverse --author=\"user@yourdomain.com\" --pretty=format:\"%aD %H %ae %s\" GIT miscellaneous Add a submodule cd \u003cpath where you want to add submodule\u003e git submodule add \u003cURL\u003e See info git remote show origin Change origin URL git remote set-url origin \u003cURL\u003e Update user details git config --global user.name 'Your Name' git config --global user.email.you@somedomain.com Udate user details for a repo git config user.name 'Your Name' git config user.email.you@somedomain.com Add a file to a commit git add \u003cfilePath\u003e Un-stage a file (remove a file from the commit) git reset HEAD \u003cfilePath\u003e Un-stage all files (remove all files from the commit) git reset HEAD -- Delete a file git rm \u003cfilePath\u003e git rm -f \u003cfilePath\u003e  Note-f is for forcefully deleting the file\n Change email id in already commited commits git filter-branch --env-filter ' WRONG_EMAIL=\"\u003cwronguser@wrongdomain.com\u003e\" NEW_NAME=\"Your Name\" NEW_EMAIL=\"correctuser@correctdomain.com\" if [ \"$GIT_COMMITTER_EMAIL\" = \"$WRONG_EMAIL\" ] then export GIT_COMMITTER_NAME=\"$NEW_NAME\" export GIT_COMMITTER_EMAIL=\"$NEW_EMAIL\" fi if [ \"$GIT_AUTHOR_EMAIL\" = \"$WRONG_EMAIL\" ] then export GIT_AUTHOR_NAME=\"$NEW_NAME\" export GIT_AUTHOR_EMAIL=\"$NEW_EMAIL\" fi ' --tag-name-filter cat -- --branches --tags ","description":"Useful git commands","tags":["git"],"title":"Git","uri":"/commands/git/"},{"content":" Introduction Commands  ","description":"","tags":null,"title":"Home","uri":"/"},{"content":"Why? Many times I’ve to do some task on command line and I often have to search on google to find them and use them. Sometimes I end up doing a through search before I find the exact command I’m looking for. I created this list to save myself some time in future.\n","description":"","tags":null,"title":"Introduction","uri":"/introduction/"},{"content":" Git Openssl Keytool SSH Miscellaneous  ","description":"","tags":null,"title":"Commands","uri":"/commands/"},{"content":"Fetch certificate from a server openssl s_client -showcerts -servername \u003cserver hostname\u003e -connect \u003cserver hostname\u003e:443 \u003c/dev/null    Example   Example openssl s_client -showcerts -servername 'google.com' -connect 'google.com:443' \u003c/dev/null     Create Create a Self Signed Root CA  Create key pair openssl genrsa -des3 -out \u003ckey file\u003e.key 2048 # or openssl ecparam -out \u003ckey file\u003e.key -name prime256v1 -genkey  Create CSR openssl req -new -sha256 -key \u003ckey file\u003e.key -out \u003ccsr file\u003e.csr  Sign CSR openssl x509 -req -sha256 -days 365 -in \u003ccsr file\u003e.csr -signkey \u003ckey file\u003e.key -out \u003ccertificate file\u003e.crt   Create Self Signed Certificate  Create key pair openssl genrsa -des3 -out \u003ckey file\u003e.key 2048 # or openssl ecparam -out \u003ckey file\u003e.key -name prime256v1 -genkey  Create CSR openssl req -key \u003ckey file\u003e.key -new -out \u003ccsr file\u003e.csr  Sign CSR openssl x509 -signkey \u003ckey file\u003e.key -in \u003ccsr file\u003e.csr -req -days 365 -out \u003ccertificate file\u003e.crt   Request a certificate from Self Signed Root CA  Create key pair openssl genrsa -des3 -out \u003ckey file\u003e.key 2048 # or openssl ecparam -out \u003ckey file\u003e.key -name prime256v1 -genkey  Create CSR openssl req -key \u003ckey file\u003e.key -new -out \u003ccsr file\u003e.csr  Sign CSR openssl x509 -req -in \u003ccsr file\u003e.csr -CA \u003cca certificate file\u003e.crt -CAkey \u003cca key file\u003e.key -CAcreateserial -out \u003ccertificate file\u003e.crt -days 365 -sha256   View or Print Print a Certificate openssl x509 -text -noout -in \u003ccertificate file\u003e.crt Print a CSR openssl req -in \u003ccsr file\u003e.csr -text -noout Convert PEM to DER/CRT openssl x509 -in \u003ccertificate file\u003e.pem -outform der -out \u003ccertificate file\u003e.(crt|der) DER/CRT to PEM openssl x509 -inform der -in \u003ccertificate file\u003e.(crt|der) -outform pem -out \u003ccertificate file\u003e.pem PEM to PKCS12/P12/PFX openssl pkcs12 -inkey \u003ckey file\u003e.key -in \u003ccertificate file\u003e.crt -export -out \u003cpkcs12 file\u003e.(p12|pfx) ","description":"Useful openssl commands","tags":["openssl","certificates","keys"],"title":"Openssl","uri":"/commands/openssl/"},{"content":"List List all items from a keystore keytool -list -noprompt -storepass \u003ckeystore password\u003e -keystore \u003cpath to keystore\u003e    Example   Example keytool -list -noprompt -storepass 'changeit' -keystore '/etc/pki/java/cacerts'     List a particular item from a keystore keytool -list -noprompt -alias \u003calias of the item\u003e -storepass \u003ckeystore password\u003e -keystore \u003cpath to keystore\u003e    Example   Example keytool -list -noprompt -alias 'globalsignrootr46' -storepass 'changeit' -keystore '/etc/pki/java/cacerts' -v     Import Import a trust certificate keytool -import -trustcacerts -keystore \u003cpath to keystore\u003e -storepass \u003ckeystore password\u003e -noprompt -alias \u003calias for item\u003e -file \u003ccertificate file\u003e    Example   Example keytool -import -trustcacerts -keystore '/etc/pki/java/cacerts' -storepass 'changeit' -noprompt -alias 'mycert' -file 'cert.pem'     ","description":"Useful keytool commands","tags":["keytool","certificates","keys"],"title":"Keytool","uri":"/commands/keytool/"},{"content":"Generate SSh key ssh-keygen -t \u003ctype\u003e -C \u003ccomment\u003e    Example  ssh-keygen -t ed25519 -C \"john@users.noreply.github.com\" # or ssh-keygen -t rsa -C \"My key name\"    Copy my public key ssh-copy-id -i \u003cpath to key file\u003e \u003cuser\u003e@\u003chostname or ip\u003e    Example  ssh-copy-id -i ~/.ssh/id_rsa john@10.10.10.1 # or ssh-copy-id -i ~/.ssh/id_rsa john@mydomainname.tld    Login ssh \u003cuser\u003e@\u003chostname or ip\u003e    Example  ssh john@10.10.10.1 # or ssh john@mydomainname.tld    ","description":"Useful ssh commands","tags":["ssh"],"title":"SSH","uri":"/commands/ssh/"},{"content":"Monitor ipv4 address for a hostname using macOS DNS resolver dns-sd -G v4 \u003chostname\u003e Ping a host given number of times ping -c \u003cnumber\u003e \u003chostname\u003e Query IP address of a hostname nslookup \u003chostname\u003e Query IP address of a hostname from a specific DNS server nslookup \u003chostname\u003e \u003cdns server address\u003e    Example  nslookup google.com 8.8.8.8    Query specific field from DNS server nslookup -query=\u003cfield name\u003e \u003chostname\u003e    Example  nslookup -query=cname google.com 8.8.8.8    Find open ports Linux netstat -plant macOS   Using netstat\nnetstat -an -p\u003cprotocol\u003e    Example  netstat -an -ptcp # or netstat -an -pudp      Using lsof\nlsof -i   ","description":"Miscellaneous useful commands","tags":["dns-sd","ping","nslookup","netstat"],"title":"Miscellaneous","uri":"/commands/miscellaneous/"},{"content":"","description":"","tags":null,"title":"Categories","uri":"/categories/"},{"content":"","description":"","tags":null,"title":"certificates","uri":"/tags/certificates/"},{"content":"","description":"","tags":null,"title":"dns-sd","uri":"/tags/dns-sd/"},{"content":"","description":"","tags":null,"title":"git","uri":"/tags/git/"},{"content":"","description":"","tags":null,"title":"keys","uri":"/tags/keys/"},{"content":"","description":"","tags":null,"title":"keytool","uri":"/tags/keytool/"},{"content":"","description":"","tags":null,"title":"netstat","uri":"/tags/netstat/"},{"content":"","description":"","tags":null,"title":"nslookup","uri":"/tags/nslookup/"},{"content":"","description":"","tags":null,"title":"openssl","uri":"/tags/openssl/"},{"content":"","description":"","tags":null,"title":"ping","uri":"/tags/ping/"},{"content":"","description":"","tags":null,"title":"ssh","uri":"/tags/ssh/"},{"content":"","description":"","tags":null,"title":"Tags","uri":"/tags/"}]